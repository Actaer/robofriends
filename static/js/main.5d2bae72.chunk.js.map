{"version":3,"sources":["reportWebVitals.js","Card.js","CardList.js","SearchBox.js","Scroll.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sJAYeA,G,KAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCOCQ,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACzB,OACI,sBAAKC,UAAY,sDAAjB,UACI,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAA1B,cACpB,gCACI,6BAAKF,IACL,4BAAIC,WCYLK,EAjBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,8BAEIA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CACAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHJS,SCMlBC,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAC9B,OACI,qBAAKV,UAAU,MAAf,SACI,uBACAA,UAAY,mCACZW,KAAK,SACLC,YAAY,gBACZC,SAAYH,OCCTI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKJ,EAAMK,YCqCJC,E,kDAnCX,aAAc,IAAD,8BACT,gBAWJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEf,YAAac,EAAME,OAAOC,SAX1C,EAAKC,MAAQ,CACTvB,OAAQ,GACRK,YAAa,IAJR,E,qDAQb,WAAoB,IAAD,OACfmB,MAAM,8CAA8CtC,MAAK,SAAAuC,GAAQ,OAAIA,EAASC,UAAQxC,MAAK,SAAAyC,GAAK,OAAI,EAAKP,SAAS,CAAEpB,OAAQ2B,S,oBAOhI,WAAU,IAAD,EAC2BC,KAAKL,MAA7BvB,EADH,EACGA,OAAQK,EADX,EACWA,YACVwB,EAAiB7B,EAAO8B,QAAO,SAAAC,GACjC,OAAOA,EAAMtC,KAAKuC,cAAcC,SAAS5B,EAAY2B,kBAEzD,OAAQhC,EAAOkC,OAGf,sBAAKtC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcsB,KAAKV,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUlB,OAAW6B,SAN7B,oBAAIjC,UAAU,QAAd,4B,GAvBUuC,aCClBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BzD,K","file":"static/js/main.5d2bae72.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n    return(\n        <div className = 'tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img alt='Robot' src={`https://robohash.org/${id}?200x200`}/>\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card.js'\n\nconst CardList = ({ robots }) => {\n    return(\n        <div>\n        {\n            robots.map((user, i) => {\n                return(\n                    <Card key = {i} \n                    id={robots[i].id} \n                    name={robots[i].name} \n                    email={robots[i].email}/>\n                );\n            })\n        }\n        </div>\n    )\n}\n\nexport default CardList;","import React from 'react'\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n    return(\n        <div className='pa2'>\n            <input \n            className = 'pa3 ba b--green bg-lightest-blue'\n            type='search' \n            placeholder='search robots' \n            onChange = {searchChange}\n            />\n        </div>\n    );\n}\n\nexport default SearchBox;","import React from 'react'\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflowY: 'scroll', border: '1px solid black', height: '800px'}}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Scroll;","import React, { Component } from 'react'\nimport CardList from './CardList'\nimport SearchBox from './SearchBox'\nimport './index.css'\nimport Scroll from './Scroll'\n\nclass App extends Component{\n    constructor(){\n        super();\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n    }\n\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({ robots: users }));\n    }\n\n    onSearchChange = (event) => {\n        this.setState({ searchfield: event.target.value })\n    }\n\n    render() {\n        const { robots, searchfield } = this.state;\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\n        })\n        return !robots.length ?\n        <h1 className=\"tc f1\">Loading...</h1> :\n        (\n        <div className='tc'>\n            <h1 className=\"f1\">RoboFriends</h1>\n            <SearchBox searchChange={this.onSearchChange}/>\n            <Scroll>\n                <CardList robots = { filteredRobots }/>\n            </Scroll>\n        </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}